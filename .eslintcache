[{"D:\\SLIIT\\3rd Year\\1st Semester\\Application Framework\\Study Help\\books_store_frontend\\src\\index.js":"1","D:\\SLIIT\\3rd Year\\1st Semester\\Application Framework\\Study Help\\books_store_frontend\\src\\reportWebVitals.js":"2","D:\\SLIIT\\3rd Year\\1st Semester\\Application Framework\\Study Help\\books_store_frontend\\src\\routes.js":"3","D:\\SLIIT\\3rd Year\\1st Semester\\Application Framework\\Study Help\\books_store_frontend\\src\\components\\common\\dummy.js":"4","D:\\SLIIT\\3rd Year\\1st Semester\\Application Framework\\Study Help\\books_store_frontend\\src\\Components\\common\\dummy.js":"5","D:\\SLIIT\\3rd Year\\1st Semester\\Application Framework\\Study Help\\books_store_frontend\\src\\config.js":"6","D:\\SLIIT\\3rd Year\\1st Semester\\Application Framework\\Study Help\\books_store_frontend\\src\\Components\\layout\\Header.js":"7","D:\\SLIIT\\3rd Year\\1st Semester\\Application Framework\\Study Help\\books_store_frontend\\src\\Components\\layout\\WebContainer.js":"8","D:\\SLIIT\\3rd Year\\1st Semester\\Application Framework\\Study Help\\books_store_frontend\\src\\Components\\layout\\WebLayout.js":"9","D:\\SLIIT\\3rd Year\\1st Semester\\Application Framework\\Study Help\\books_store_frontend\\src\\Components\\website\\Home.js":"10","D:\\SLIIT\\3rd Year\\1st Semester\\Application Framework\\Study Help\\books_store_frontend\\src\\Authentication\\index.js":"11","D:\\SLIIT\\3rd Year\\1st Semester\\Application Framework\\Study Help\\books_store_frontend\\src\\Components\\website\\Login.js":"12","D:\\SLIIT\\3rd Year\\1st Semester\\Application Framework\\Study Help\\books_store_frontend\\src\\Components\\website\\SignUp.js":"13","D:\\SLIIT\\3rd Year\\1st Semester\\Application Framework\\Study Help\\books_store_frontend\\src\\Components\\website\\Store.js":"14","D:\\SLIIT\\3rd Year\\1st Semester\\Application Framework\\Study Help\\books_store_frontend\\src\\Components\\layout\\Footer.js":"15","D:\\SLIIT\\3rd Year\\1st Semester\\Application Framework\\Study Help\\books_store_frontend\\src\\Service\\website\\home_service.js":"16","D:\\SLIIT\\3rd Year\\1st Semester\\Application Framework\\Study Help\\books_store_frontend\\src\\Authentication\\AdminRoute.js":"17","D:\\SLIIT\\3rd Year\\1st Semester\\Application Framework\\Study Help\\books_store_frontend\\src\\Components\\admin\\AddBook.js":"18","D:\\SLIIT\\3rd Year\\1st Semester\\Application Framework\\Study Help\\books_store_frontend\\src\\Components\\admin\\ManageBooks.js":"19","D:\\SLIIT\\3rd Year\\1st Semester\\Application Framework\\Study Help\\books_store_frontend\\src\\Service\\admin\\admin_service.js":"20","D:\\SLIIT\\3rd Year\\1st Semester\\Application Framework\\Study Help\\books_store_frontend\\src\\Components\\admin\\ManageCategories.js":"21","D:\\SLIIT\\3rd Year\\1st Semester\\Application Framework\\Study Help\\books_store_frontend\\src\\Components\\admin\\AddAdmin.js":"22","D:\\SLIIT\\3rd Year\\1st Semester\\Application Framework\\Study Help\\books_store_frontend\\src\\Components\\common\\Page404.js":"23"},{"size":254,"mtime":1612353724902,"results":"24","hashOfConfig":"25"},{"size":362,"mtime":499162500000,"results":"26","hashOfConfig":"25"},{"size":1228,"mtime":1612578209532,"results":"27","hashOfConfig":"25"},{"size":209,"mtime":1612348867953,"results":"28","hashOfConfig":"25"},{"size":209,"mtime":1612348867953,"results":"29","hashOfConfig":"25"},{"size":1599,"mtime":1612431666597,"results":"30","hashOfConfig":"25"},{"size":5688,"mtime":1612430228348,"results":"31","hashOfConfig":"25"},{"size":542,"mtime":1612578349071,"results":"32","hashOfConfig":"25"},{"size":2117,"mtime":1612578209510,"results":"33","hashOfConfig":"25"},{"size":5025,"mtime":1612443407701,"results":"34","hashOfConfig":"25"},{"size":1556,"mtime":1612411318181,"results":"35","hashOfConfig":"25"},{"size":4781,"mtime":1612410684775,"results":"36","hashOfConfig":"25"},{"size":6180,"mtime":1612430956080,"results":"37","hashOfConfig":"25"},{"size":4622,"mtime":1612443423444,"results":"38","hashOfConfig":"25"},{"size":522,"mtime":1612408305903,"results":"39","hashOfConfig":"25"},{"size":438,"mtime":1612408402074,"results":"40","hashOfConfig":"25"},{"size":471,"mtime":1612349153592,"results":"41","hashOfConfig":"25"},{"size":9557,"mtime":1612434316248,"results":"42","hashOfConfig":"25"},{"size":16780,"mtime":1612435969124,"results":"43","hashOfConfig":"25"},{"size":3553,"mtime":1612435001915,"results":"44","hashOfConfig":"25"},{"size":8208,"mtime":1612432028038,"results":"45","hashOfConfig":"25"},{"size":5493,"mtime":1612431177744,"results":"46","hashOfConfig":"25"},{"size":563,"mtime":1612578510735,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"xw0y6e",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"50"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"50"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"50"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"50"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"50"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"50"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"50"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"50"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"50"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"50"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\SLIIT\\3rd Year\\1st Semester\\Application Framework\\Study Help\\books_store_frontend\\src\\index.js",[],["105","106"],"D:\\SLIIT\\3rd Year\\1st Semester\\Application Framework\\Study Help\\books_store_frontend\\src\\reportWebVitals.js",[],"D:\\SLIIT\\3rd Year\\1st Semester\\Application Framework\\Study Help\\books_store_frontend\\src\\routes.js",[],"D:\\SLIIT\\3rd Year\\1st Semester\\Application Framework\\Study Help\\books_store_frontend\\src\\components\\common\\dummy.js",["107","108"],"D:\\SLIIT\\3rd Year\\1st Semester\\Application Framework\\Study Help\\books_store_frontend\\src\\Components\\common\\dummy.js",["109","110"],"D:\\SLIIT\\3rd Year\\1st Semester\\Application Framework\\Study Help\\books_store_frontend\\src\\config.js",[],"D:\\SLIIT\\3rd Year\\1st Semester\\Application Framework\\Study Help\\books_store_frontend\\src\\Components\\layout\\Header.js",["111","112"],"import React, {useEffect, useState} from \"react\";\r\nimport * as Constants from '../../config';\r\nimport {Link} from \"react-router-dom\";\r\nimport {isAuthenticate, logout} from \"../../Authentication\";\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {\r\n    faSignOutAlt,\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport {faSignInAlt} from \"@fortawesome/free-solid-svg-icons/faSignInAlt\";\r\nimport {faUserPlus} from \"@fortawesome/free-solid-svg-icons/faUserPlus\";\r\nimport {faTools} from \"@fortawesome/free-solid-svg-icons/faTools\";\r\nimport {faPlusSquare} from \"@fortawesome/free-solid-svg-icons/faPlusSquare\";\r\nimport {faToolbox} from \"@fortawesome/free-solid-svg-icons/faToolbox\";\r\nimport {faUserLock} from \"@fortawesome/free-solid-svg-icons/faUserLock\";\r\n\r\nconst Header = ({history}) => {\r\n\r\n    const isActive = (history, path) => {\r\n        if (history.location.pathname === path) {\r\n            return 'nav-item active';\r\n        } else {\r\n            return 'nav-item';\r\n        }\r\n    };\r\n\r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n            <Link className=\"navbar-brand\" to={Constants.ROUTES.landing_page}>\r\n                <img src=\"https://getbootstrap.com/docs/4.0/assets/brand/bootstrap-solid.svg\"\r\n                     alt=\"\" width=\"30\" height=\"30\" />\r\n            </Link>\r\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarScroll\"\r\n                    aria-controls=\"navbarScroll\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarScroll\">\r\n                <ul className=\"navbar-nav mr-auto\">\r\n                    <li className={isActive(history, Constants.ROUTES.landing_page)}>\r\n                        <Link className=\"nav-link\" to={Constants.ROUTES.landing_page}>Home</Link>\r\n                    </li>\r\n                    <li className={isActive(history, Constants.ROUTES.store_page)}>\r\n                        <Link className=\"nav-link\" to={Constants.ROUTES.store_page}>Store</Link>\r\n                    </li>\r\n                </ul>\r\n                <ul className=\"navbar-nav justify-content-end\">\r\n                    {isAuthenticate() && isAuthenticate().user.role === 1 && (\r\n                        <li className=\"nav-item dropdown\">\r\n                            <span className=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarScrollingDropdown\" role=\"button\"\r\n                               data-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                                Admin\r\n                            </span>\r\n                            <ul className=\"dropdown-menu mt-2\" aria-labelledby=\"navbarScrollingDropdown\">\r\n                                <li>\r\n                                    <Link to={Constants.ROUTES.add_book_page} className=\"dropdown-item\">\r\n                                        <FontAwesomeIcon size={\"sm\"} icon={faPlusSquare}/> {' '}  Add Book</Link>\r\n                                </li>\r\n                                <li>\r\n                                    <Link to={Constants.ROUTES.manage_book_page} className=\"dropdown-item\">\r\n                                        <FontAwesomeIcon size={\"sm\"} icon={faTools}/> {' '}  Manage Books</Link>\r\n                                </li>\r\n                                <li>\r\n                                    <Link to={Constants.ROUTES.manage_categories_page} className=\"dropdown-item\">\r\n                                        <FontAwesomeIcon size={\"sm\"} icon={faToolbox}/> {' '}  Manage Categories</Link>\r\n                                </li>\r\n                                <li>\r\n                                    <Link to={Constants.ROUTES.add_admin_user_page} className=\"dropdown-item\">\r\n                                        <FontAwesomeIcon size={\"sm\"} icon={faUserLock}/> {' '}  Add Admin User</Link>\r\n                                </li>\r\n                            </ul>\r\n                        </li>\r\n                    )}\r\n                    {isAuthenticate() && (\r\n                        <li className=\"nav-item\">\r\n                            <span className=\"nav-link\">{`Hi ${isAuthenticate().user.name}`}</span>\r\n                        </li>\r\n                    )}\r\n                    {isAuthenticate() && (\r\n                        <li className=\"nav-item\">\r\n                                <span className=\"nav-link\" style={{cursor: 'pointer'}}\r\n                                      onClick={() => logout(() => {\r\n                                          history.push('/');\r\n                                      })}> <FontAwesomeIcon size={\"sm\"} icon={faSignOutAlt}/> {' '} Logout</span>\r\n                        </li>\r\n                    )}\r\n                    {!isAuthenticate() && (\r\n                        <li className={isActive(history, Constants.ROUTES.login_page)}>\r\n                            <Link className=\"nav-link\" to={Constants.ROUTES.login_page}> <FontAwesomeIcon size={\"sm\"} icon={faSignInAlt}/> {' '} Login</Link>\r\n                        </li>\r\n                    )}\r\n\r\n                    {!isAuthenticate() && (\r\n                        <li className={isActive(history, Constants.ROUTES.create_account_page)}>\r\n                            <Link className=\"nav-link\" to={Constants.ROUTES.create_account_page}> <FontAwesomeIcon size={\"sm\"} icon={faUserPlus}/> {' '} Create an Account</Link>\r\n                        </li>\r\n                    )}\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","D:\\SLIIT\\3rd Year\\1st Semester\\Application Framework\\Study Help\\books_store_frontend\\src\\Components\\layout\\WebContainer.js",[],"D:\\SLIIT\\3rd Year\\1st Semester\\Application Framework\\Study Help\\books_store_frontend\\src\\Components\\layout\\WebLayout.js",[],"D:\\SLIIT\\3rd Year\\1st Semester\\Application Framework\\Study Help\\books_store_frontend\\src\\Components\\website\\Home.js",["113","114"],"import React, {useEffect, useState} from \"react\";\r\nimport '../../assets/book_card_asset/bootstrap/css/bootstrap.min.css';\r\nimport '../../assets/book_card_asset/fonts/font-awesome.min.css';\r\nimport '../../assets/book_card_asset/css/Bootstrap-Cards-v2.css';\r\nimport '../../assets/book_card_asset/css/styles.css';\r\nimport {getPopularBooks} from \"../../Service/website/home_service\";\r\nimport {API} from \"../../config\";\r\nimport {Link} from \"react-router-dom\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faBookReader} from \"@fortawesome/free-solid-svg-icons/faBookReader\";\r\n\r\nconst Home = (props) => {\r\n    const [popularBooks, setPopularBooks] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        setLoading(true);\r\n        getPopularBooks()\r\n            .then(response => {\r\n                setLoading(false);\r\n                if(!response.error){\r\n                    setPopularBooks(response.message)\r\n                }\r\n            })\r\n            .catch(err => console.log(err));\r\n    }, [])\r\n\r\n    const showRating = (rating) => {\r\n        if(rating > 0){\r\n            let startArray = [];\r\n\r\n            for (let i = 0; i < Math.floor(rating); i++)\r\n                startArray.push(<li key={i} className=\"list-inline-item m-0\"><i className=\"fa fa-star text-success\"></i></li>);\r\n\r\n            if(rating > Math.floor(rating)){\r\n                startArray.push(<li key={0.5} className=\"list-inline-item m-0\"><i className=\"fa fa-star-half text-success\"></i></li>)\r\n            }\r\n\r\n            return (\r\n                <ul className=\"list-inline small\">\r\n                    {startArray}\r\n                </ul>\r\n            );\r\n        }else{\r\n            return (\r\n                <ul className=\"list-inline small\">\r\n                    <li key={1} className=\"list-inline-item m-0\"><i className=\"fa fa-star-o text-success\"></i></li>\r\n                    <li key={2} className=\"list-inline-item m-0\"><i className=\"fa fa-star-o text-success\"></i></li>\r\n                    <li key={3} className=\"list-inline-item m-0\"><i className=\"fa fa-star-o text-success\"></i></li>\r\n                    <li key={4} className=\"list-inline-item m-0\"><i className=\"fa fa-star-o text-success\"></i></li>\r\n                    <li key={5} className=\"list-inline-item m-0\"><i className=\"fa fa-star-o text-success\"></i></li>\r\n                </ul>\r\n            );\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-12 mb-3 mt-5\" style={{fontSize: '30px', color: '#8C8887'}}>\r\n                    Top 6 Books\r\n                </div>\r\n            </div>\r\n            <div className=\"row mt-5\">\r\n                {\r\n                    loading ? (\r\n                        <div className=\"col-12 mt-5 text-center\">\r\n                            <CircularProgress />\r\n                        </div>\r\n                    ) : (\r\n                        popularBooks.map(book => (\r\n                            <div key={book._id} className=\"col-lg-3 col-md-6 mb-lg-0\">\r\n                                <div className=\"card rounded mb-5 shadow-lg border-0\">\r\n                                    <div className=\"card-body p-4\">\r\n                                        <Link style={{textDecoration: 'none'}} to={`/book/${book._id}`}>\r\n                                            <img\r\n                                                src={`${API}/book/image/${book._id}`}\r\n                                                alt=\"\"\r\n                                                className=\"img-fluid d-block mx-auto mb-3\"\r\n                                                style={{height: '300px', width: '250px'}}\r\n                                            />\r\n\r\n                                        </Link>\r\n                                        <h5>\r\n                                            <Link style={{textDecoration: 'none'}} to={`/book/${book._id}`} className=\"text-dark\">{book.name}</Link>\r\n                                        </h5>\r\n                                        <div\r\n                                            className=\"price\">\r\n                                            {`Rs ${book.price}`}\r\n                                        </div>\r\n                                        <span className=\"small text-muted font-italic\">{book.description.length > 32 ? book.description.substr(0, 30) + ' .....': book.description}</span><br/>\r\n                                        <span className=\"small text-muted font-italic\">By {book.authorName}</span>\r\n                                        {showRating(book.rating)}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        ))\r\n                    )\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n","D:\\SLIIT\\3rd Year\\1st Semester\\Application Framework\\Study Help\\books_store_frontend\\src\\Authentication\\index.js",[],"D:\\SLIIT\\3rd Year\\1st Semester\\Application Framework\\Study Help\\books_store_frontend\\src\\Components\\website\\Login.js",["115"],"import React, {useEffect, useState} from \"react\";\r\nimport {login, authenticate, isAuthenticate} from \"../../Authentication\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport * as Constants from \"../../config\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nconst Login = (props) => {\r\n\r\n    const {user} = isAuthenticate();\r\n\r\n    const [errorMessage, setErrorMessage] = useState(\"\");\r\n\r\n    const [loginDetails, setLoginDetails] = useState({\r\n        email: \"\",\r\n        password: \"\",\r\n        error: false,\r\n        loading: false,\r\n        redirect: false\r\n    });\r\n\r\n    const {\r\n        email,\r\n        password,\r\n        error,\r\n        loading,\r\n        redirect\r\n    } = loginDetails;\r\n\r\n    const handleOnChange = (name) => (event) => {\r\n        const value = event.target.value;\r\n        setLoginDetails({...loginDetails, [name]: value});\r\n    };\r\n\r\n    const onClickSubmit = (event) => {\r\n        event.preventDefault();\r\n        setLoginDetails({...loginDetails, error: false, loading: true});\r\n        setErrorMessage(\"\");\r\n        //check values empty?\r\n        if(email === \"\" || password === \"\"){\r\n            setLoginDetails({...loginDetails, error: true, loading: false});\r\n            setErrorMessage(\"Fields cannot be empty!\");\r\n        }else{\r\n            login({email: email, password: password})\r\n                .then(response => {\r\n                    if(response.error){\r\n                        //show error message\r\n                        setLoginDetails({...loginDetails, error: true, loading: false});\r\n                        if(Array.isArray(response.message)){\r\n                            if(response.message[0].param === \"email\")\r\n                                setErrorMessage(response.message[0].msg);\r\n                        }else{\r\n                            setErrorMessage(response.message)\r\n                        }\r\n                    }else{\r\n                        //Add authentication\r\n                        //redirect user to home\r\n                        authenticate({token: response.token, user: response.user}, () => {\r\n                                setLoginDetails({...loginDetails, redirect: true, error: false, loading: false});\r\n                        });\r\n                    }\r\n                })\r\n        }\r\n    }\r\n\r\n    const showError = () => (\r\n        <div className=\"alert alert-danger text-center mt-3\" style={{display: error ? '' : 'none'}}>\r\n            {errorMessage}\r\n        </div>\r\n    );\r\n\r\n    const redirectUser = () => {\r\n        if (redirect) {\r\n            if (user && (user.role === 1)) {\r\n                return <Redirect to={Constants.ROUTES.landing_page}/>\r\n            } else {\r\n                return <Redirect to={Constants.ROUTES.landing_page}/>\r\n            }\r\n        }\r\n\r\n        if (isAuthenticate()) {\r\n            return <Redirect to={Constants.ROUTES.landing_page}/>\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"text-center container mt-5\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-4 col-sm-12 col-lg-4\">\r\n\r\n                </div>\r\n                <div className=\"col-md-4 col-sm-12 col-lg-4\">\r\n                    <div className=\"form-signin\">\r\n                        <img className=\"mb-4\" src=\"https://getbootstrap.com/docs/4.0/assets/brand/bootstrap-solid.svg\"\r\n                             alt=\"\" width=\"72\" height=\"72\" />\r\n\r\n                         <h1 className=\"h3 mb-3 font-weight-normal\">Please sign in</h1>\r\n\r\n                        <label htmlFor=\"inputEmail\" className=\"sr-only mt-5\">Email address</label>\r\n                        <input type=\"email\" id=\"inputEmail\" className=\"form-control mt-5\" placeholder=\"Email address\"\r\n                               value={email}\r\n                               onChange={handleOnChange('email')}/>\r\n                        <label htmlFor=\"inputPassword\" className=\"sr-only mt-2\">Password</label>\r\n                        <input type=\"password\" id=\"inputPassword\" className=\"form-control mt-2\" placeholder=\"Password\"\r\n                                value={password}\r\n                                onChange={handleOnChange('password')}/>\r\n                        <button className=\"btn btn-lg btn-primary btn-block mt-5\" onClick={onClickSubmit} disabled={loading}>\r\n                            { loading ? <CircularProgress size={20}/> : 'Login' }\r\n                        </button>\r\n                        {showError()}\r\n                        <p className=\"mt-5 mb-3 text-muted\">© 2021-2022</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-md-4 col-sm-12 col-lg-4\">\r\n\r\n                </div>\r\n            </div>\r\n            {redirectUser()}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n","D:\\SLIIT\\3rd Year\\1st Semester\\Application Framework\\Study Help\\books_store_frontend\\src\\Components\\website\\SignUp.js",["116"],"import React, {useEffect, useState} from \"react\";\r\nimport {authenticate, isAuthenticate, signUp} from \"../../Authentication\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport * as Constants from \"../../config\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nconst SignUp = (props) => {\r\n\r\n    const {user} = isAuthenticate();\r\n\r\n    const [errorMessage, setErrorMessage] = useState(\"\");\r\n\r\n    const [loginDetails, setLoginDetails] = useState({\r\n        name: \"\",\r\n        role: 0,\r\n        email: \"\",\r\n        password: \"\",\r\n        confPassword: \"\",\r\n        error: false,\r\n        loading: false,\r\n        redirect: false\r\n    });\r\n\r\n    const {\r\n        name,\r\n        role,\r\n        email,\r\n        password,\r\n        confPassword,\r\n        error,\r\n        loading,\r\n        redirect\r\n    } = loginDetails;\r\n\r\n    const handleOnChange = (name) => (event) => {\r\n        const value = event.target.value;\r\n        setLoginDetails({...loginDetails, [name]: value});\r\n    };\r\n\r\n    const onClickSubmit = (event) => {\r\n        event.preventDefault();\r\n        setLoginDetails({...loginDetails, error: false, loading: true});\r\n        setErrorMessage(\"\");\r\n        //check values empty?\r\n        if(email === \"\" || password === \"\" || name === \"\" || confPassword === \"\"){\r\n            setLoginDetails({...loginDetails, error: true, loading: false});\r\n            setErrorMessage(\"Fields cannot be empty!\");\r\n        }else{\r\n            // check password and confPassword match?\r\n            if(password !== confPassword){\r\n                setLoginDetails({...loginDetails, error: true, loading: false});\r\n                setErrorMessage(\"Passwords should match!\");\r\n            }else{\r\n                signUp({name: name, role: role, email: email, password: password})\r\n                    .then(response => {\r\n                        if(response.error){\r\n                            //show error message\r\n                            setLoginDetails({...loginDetails, error: true, loading: false});\r\n                            if(Array.isArray(response.message)){\r\n                                if(response.message[0].param === \"email\")\r\n                                    setErrorMessage(response.message[0].msg);\r\n                            }else{\r\n                                setErrorMessage(response.message)\r\n                            }\r\n                        }else{\r\n                            setLoginDetails({...loginDetails, name: '', role: 0, email: '', password: '', confPassword: '', error: false, loading: false});\r\n                            //Add authentication\r\n                            //redirect user to home\r\n                            authenticate({token: response.token, user: response.user}, () => {\r\n                                setLoginDetails({...loginDetails, redirect: true, error: false, loading: false});\r\n                            });\r\n                        }\r\n                    })\r\n            }\r\n        }\r\n    }\r\n\r\n    const showError = () => (\r\n        <div className=\"alert alert-danger text-center mt-3\" style={{display: error ? '' : 'none'}}>\r\n            {errorMessage}\r\n        </div>\r\n    );\r\n\r\n    const redirectUser = () => {\r\n        if (redirect) {\r\n            if (user && (user.role === 1)) {\r\n                return <Redirect to={Constants.ROUTES.landing_page}/>\r\n            } else {\r\n                return <Redirect to={Constants.ROUTES.landing_page}/>\r\n            }\r\n        }\r\n\r\n        if (isAuthenticate()) {\r\n            return <Redirect to={Constants.ROUTES.landing_page}/>\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"text-center container mt-5\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-4 col-sm-12 col-lg-4\">\r\n\r\n                </div>\r\n                <div className=\"col-md-4 col-sm-12 col-lg-4\">\r\n                    <div className=\"form-signin\">\r\n                        <img className=\"mb-4\" src=\"https://getbootstrap.com/docs/4.0/assets/brand/bootstrap-solid.svg\"\r\n                             alt=\"\" width=\"72\" height=\"72\" />\r\n\r\n                        <h1 className=\"h3 mb-3 font-weight-normal\">Sign Up</h1>\r\n\r\n                        <label htmlFor=\"inputName\" className=\"sr-only mt-5\">Name</label>\r\n                        <input type=\"text\" id=\"inputName\" className=\"form-control mt-5\" placeholder=\"Enter Name\"\r\n                               value={name}\r\n                               onChange={handleOnChange('name')}/>\r\n\r\n                        <label htmlFor=\"inputEmail\" className=\"sr-only mt-2\">Email address</label>\r\n                        <input type=\"email\" id=\"inputEmail\" className=\"form-control mt-2\" placeholder=\"Enter Email address\"\r\n                               value={email}\r\n                               onChange={handleOnChange('email')}/>\r\n\r\n                        <label htmlFor=\"inputPassword\" className=\"sr-only mt-2\">Password</label>\r\n                        <input type=\"password\" id=\"inputPassword\" className=\"form-control mt-2\" placeholder=\"Enter Password\"\r\n                               value={password}\r\n                               onChange={handleOnChange('password')}/>\r\n\r\n                        <label htmlFor=\"inputConfPassword\" className=\"sr-only mt-2\">Confirm Password</label>\r\n                        <input type=\"password\" id=\"inputConfPassword\" className=\"form-control mt-2\" placeholder=\"Enter Confirm Password\"\r\n                               value={confPassword}\r\n                               onChange={handleOnChange('confPassword')}/>\r\n\r\n                        <button className=\"btn btn-lg btn-primary btn-block mt-5\" onClick={onClickSubmit} disabled={loading}>\r\n                                { loading ? <CircularProgress size={20}/> : 'Sign Up' }\r\n                        </button>\r\n                        {showError()}\r\n                        <p className=\"mt-5 mb-3 text-muted\">© 2021-2022</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-md-4 col-sm-12 col-lg-4\">\r\n\r\n                </div>\r\n            </div>\r\n            {redirectUser()}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SignUp;\r\n","D:\\SLIIT\\3rd Year\\1st Semester\\Application Framework\\Study Help\\books_store_frontend\\src\\Components\\website\\Store.js",[],"D:\\SLIIT\\3rd Year\\1st Semester\\Application Framework\\Study Help\\books_store_frontend\\src\\Components\\layout\\Footer.js",["117","118"],"import React, {useEffect, useState} from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport * as Constants from \"../../config\";\r\n\r\nconst Footer = (props) => {\r\n\r\n    return (\r\n        <footer className=\"footer text-center mt-auto mb-3 align-bottom\">\r\n            <span className=\"text-muted\">{'Copyright © '}{new Date().getFullYear()} <Link style={{textDecoration: 'none'}} to={Constants.ROUTES.landing_page}>Book Store</Link>, All rights reserved  </span>\r\n        </footer>\r\n    );\r\n};\r\n\r\nexport default Footer;\r\n","D:\\SLIIT\\3rd Year\\1st Semester\\Application Framework\\Study Help\\books_store_frontend\\src\\Service\\website\\home_service.js",[],"D:\\SLIIT\\3rd Year\\1st Semester\\Application Framework\\Study Help\\books_store_frontend\\src\\Authentication\\AdminRoute.js",["119"],"import React, {Component} from \"react\";\r\nimport {Route, Redirect} from \"react-router-dom\";\r\nimport { isAuthenticate } from \"./index\";\r\n\r\nconst AdminRoute = ({component: Component, ...rest}) => (\r\n    <Route {...rest} render={props => isAuthenticate() && parseInt(isAuthenticate().user.role) === 1  ? (\r\n        <Component {...props} />\r\n    ) : (\r\n        <Redirect to={{pathname: '/login', state: {from: props.location}}} />\r\n    )}/>\r\n);\r\n\r\nexport default AdminRoute;\r\n","D:\\SLIIT\\3rd Year\\1st Semester\\Application Framework\\Study Help\\books_store_frontend\\src\\Components\\admin\\AddBook.js",["120"],"import React, {useEffect, useState} from \"react\";\r\nimport {isAuthenticate} from \"../../Authentication\";\r\nimport {addBook, getAllCategories} from \"../../Service/admin/admin_service\";\r\nimport swal from \"sweetalert\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faBookReader} from \"@fortawesome/free-solid-svg-icons/faBookReader\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nconst AddBook = (props) => {\r\n    const {user, token} = isAuthenticate();\r\n\r\n    const [errorMessage, setErrorMessage] = useState(\"\");\r\n\r\n    const [selectedCategory, setSelectedCategory] = useState(\"\");\r\n    const [categories, setCategories] = useState([]);\r\n    const [productValues, setProductValues] = useState({\r\n        name: '',\r\n        description: '',\r\n        authorName: '',\r\n        price: '',\r\n        rating: '',\r\n        category: '',\r\n        image: '',\r\n        addedBy: user._id,\r\n        loading: false,\r\n        error: false\r\n    });\r\n\r\n    const {\r\n        name,\r\n        description,\r\n        authorName,\r\n        rating,\r\n        price,\r\n        category,\r\n        addedBy,\r\n        loading,\r\n        error\r\n    } = productValues;\r\n\r\n    useEffect(() => {\r\n        getAllCategories(token)\r\n            .then(response => {\r\n                if(!response.error){\r\n                    setCategories(response.message);\r\n                }\r\n            })\r\n            .catch(err => console.log(err));\r\n    }, []);\r\n\r\n    const handleOnChange = (name) => (event) => {\r\n        const value = name === 'image' ? event.target.files[0] : event.target.value;\r\n        setProductValues({...productValues, [name]: value});\r\n    };\r\n\r\n    const onCategoryChangeHandler = (value) => {\r\n        const categoryId = value._id;\r\n        setProductValues({...productValues, \"category\": categoryId});\r\n        setSelectedCategory(value);\r\n    };\r\n\r\n    const clickOnSubmit = (event) => {\r\n        event.preventDefault();\r\n        setProductValues({...productValues, error: false, loading: true});\r\n        if(productValues.image){\r\n            if(name === \"\" || rating === \"\" || description === \"\" || price === \"\" || category === \"\" || authorName === \"\"){\r\n                setProductValues({...productValues, error: true, loading: false});\r\n                setErrorMessage(\"Please fill all the required Fields!\")\r\n            }else{\r\n\r\n                //creating form data\r\n                let formData = new FormData();\r\n                formData.append('name', name);\r\n                formData.append('image', productValues.image);\r\n                formData.append('description', description);\r\n                formData.append('authorName', authorName);\r\n                formData.append('category', category);\r\n                formData.append('addedBy', addedBy);\r\n                formData.append('price', price);\r\n                formData.append('rating', rating);\r\n\r\n                addBook(token, formData)\r\n                    .then(response => {\r\n                        console.log(response);\r\n                        if (response.error) {\r\n                            setProductValues({...productValues, error: true, loading: false});\r\n                            if(Array.isArray(response.message)){\r\n                                console.log(response);\r\n                            }else{\r\n                                setErrorMessage(response.message)\r\n                            }\r\n                        } else {\r\n                            setProductValues({\r\n                                ...productValues,\r\n                                name: '',\r\n                                description: '',\r\n                                image: '',\r\n                                price: '',\r\n                                rating: '',\r\n                                authorName: '',\r\n                                category: '',\r\n                                loading: false,\r\n                                error: false\r\n                            });\r\n                            setSelectedCategory(\"\");\r\n\r\n                            swal(\"Successful!\", \"Book Created Successfully!\", \"success\");\r\n                        }\r\n                    });\r\n            }\r\n        }else{\r\n            setErrorMessage(\"Please upload a image!\");\r\n            setProductValues({...productValues, error: true, loading: false});\r\n        }\r\n\r\n    };\r\n\r\n    const showError = () => (\r\n        <div className=\"alert alert-danger text-center mt-3\" style={{display: error ? '' : 'none'}}>\r\n            {errorMessage}\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div className=\"col-12\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-12 text-center mb-3 mt-5\" style={{fontSize: '20px', color: '#8C8887'}}>\r\n                    <FontAwesomeIcon size={\"1x\"} icon={faBookReader}/> {' '} Add Book\r\n                </div>\r\n            </div>\r\n            <div className=\"row mt-3 mb-3\">\r\n                <div className=\"col-md-12 col-lg-6 col-sm-12 col-xs-12\">\r\n                    <Autocomplete\r\n                        onChange={(event, value) => onCategoryChangeHandler(value)}\r\n                        freeSolo\r\n                        value={selectedCategory}\r\n                        id=\"free-solo-2-demo\"\r\n                        disableClearable\r\n                        options={categories.map((option) => option)}\r\n                        getOptionLabel={options => options.name}\r\n                        renderInput={(params) => (\r\n                            <TextField\r\n                                {...params}\r\n                                id=\"category\"\r\n                                placeholder=\"Select Category\"\r\n                                label=\"Search Category\"\r\n                                margin=\"normal\"\r\n                                variant=\"outlined\"\r\n                                InputProps={{...params.InputProps, type: 'search'}}\r\n                            />\r\n                        )}\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-12 col-lg-6 col-sm-12 col-xs-12 mt-4\">\r\n                    <input\r\n                        type=\"file\"\r\n                        onChange={handleOnChange('image')}\r\n                        className=\"custom-file-input\"\r\n                        name=\"image\"\r\n                        accept=\"image/*\"\r\n                    />\r\n                    <label className=\"custom-file-label\" htmlFor=\"inputGroupFile01\">\r\n                        Browse an image\r\n                    </label>\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                    <hr />\r\n                </div>\r\n            </div>\r\n            <div className=\"row mt-5\">\r\n                <div className=\"col-md-12 col-lg-6 col-sm-12 col-xs-12\">\r\n                    <label htmlFor=\"inputName\" className=\"sr-only\">Name</label>\r\n                    <input type=\"text\" id=\"inputName\" className=\"form-control\" placeholder=\"Book's Name\"\r\n                           value={name}\r\n                           onChange={handleOnChange('name')}/>\r\n                </div>\r\n                <div className=\"col-md-12 col-lg-6 col-sm-12 col-xs-12\">\r\n                    <label htmlFor=\"inputDescription\" className=\"sr-only\">Description</label>\r\n                    <input type=\"text\" id=\"inputDescription\" className=\"form-control\" placeholder=\"Book's Description\"\r\n                           value={description}\r\n                           onChange={handleOnChange('description')}/>\r\n                </div>\r\n            </div>\r\n            <div className=\"row mt-2\">\r\n                <div className=\"col-md-12 col-lg-6 col-sm-12 col-xs-12\">\r\n                    <label htmlFor=\"inputPrice\" className=\"sr-only\">Price</label>\r\n                    <input type=\"text\" id=\"inputPrice\" className=\"form-control\" placeholder=\"Book's Price\"\r\n                           value={price}\r\n                           onChange={handleOnChange('price')}/>\r\n                </div>\r\n                <div className=\"col-md-12 col-lg-6 col-sm-12 col-xs-12\">\r\n                    <label htmlFor=\"inputAuthorName\" className=\"sr-only\">Author's Name</label>\r\n                    <input type=\"text\" id=\"inputAuthorName\" className=\"form-control\" placeholder=\"Book's Author\"\r\n                           value={authorName}\r\n                           onChange={handleOnChange('authorName')}/>\r\n                </div>\r\n            </div>\r\n            <div className=\"row mt-2\">\r\n                <div className=\"col-md-12 col-lg-6 col-sm-12 col-xs-12\">\r\n                    <label htmlFor=\"inputRating\" className=\"sr-only\">Book's Rating</label>\r\n                    <input type=\"text\" id=\"inputPrice\" className=\"form-control\" placeholder=\"Book's Rate\"\r\n                           value={rating}\r\n                           onChange={handleOnChange('rating')}/>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                    <button className=\"btn btn-lg btn-primary btn-block mt-5\" onClick={clickOnSubmit} disabled={loading}>\r\n                        { loading ? <CircularProgress size={20}/> : 'Add Book' }\r\n                    </button>\r\n                </div>\r\n            </div>\r\n            {showError()}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AddBook;\r\n","D:\\SLIIT\\3rd Year\\1st Semester\\Application Framework\\Study Help\\books_store_frontend\\src\\Components\\admin\\ManageBooks.js",["121","122"],"import React, {useEffect, useState} from \"react\";\r\nimport {isAuthenticate} from \"../../Authentication\";\r\nimport {\r\n    getAllCategories,\r\n    getAllBooks,\r\n    deleteBookById,\r\n    updateBook\r\n} from \"../../Service/admin/admin_service\";\r\nimport {API, columns} from \"../../config\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\n\r\nimport swal from \"sweetalert\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faBookOpen} from \"@fortawesome/free-solid-svg-icons/faBookOpen\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport {MDBDataTable} from \"mdbreact\";\r\nimport {Modal, ModalBody, ModalHeader} from \"reactstrap\";\r\nimport CancelPresentationIcon from \"@material-ui/icons/CancelPresentation\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport {faEdit} from \"@fortawesome/free-solid-svg-icons/faEdit\";\r\n\r\nconst ManageBooks = (props) => {\r\n\r\n    //table data generated\r\n    const [tableData, setTableData] = useState([]);\r\n    const [tableLoader, setTableLoader] = useState(false);\r\n\r\n    //modal show trigger event listener\r\n    const [show, setShow] = useState(false);\r\n\r\n    const {user, token} = isAuthenticate();\r\n\r\n    const [errorMessage, setErrorMessage] = useState(\"\");\r\n\r\n    const [selectedCategory, setSelectedCategory] = useState(\"\");\r\n    const [categories, setCategories] = useState([]);\r\n\r\n    const [productValues, setProductValues] = useState({\r\n        _id: '',\r\n        name: '',\r\n        description: '',\r\n        authorName: '',\r\n        price: '',\r\n        rating: '',\r\n        category: '',\r\n        image: '',\r\n        addedBy: user._id,\r\n        loading: false,\r\n        error: false\r\n    });\r\n\r\n    const {\r\n        _id,\r\n        name,\r\n        description,\r\n        authorName,\r\n        rating,\r\n        price,\r\n        category,\r\n        addedBy,\r\n        loading,\r\n        error\r\n    } = productValues;\r\n\r\n    useEffect(() => {\r\n        getAllCategories(token)\r\n            .then(response => {\r\n                if(!response.error){\r\n                    setCategories(response.message);\r\n                }\r\n            })\r\n            .catch(err => console.log(err));\r\n        fetchAllBooks();\r\n    }, []);\r\n\r\n    //to fetch all books\r\n    const fetchAllBooks = () => {\r\n        setTableLoader(true);\r\n        getAllBooks()\r\n            .then(response => {\r\n                setTableLoader(false);\r\n                if(!response.error){\r\n                    let newData = [];\r\n                    response.message.forEach(book => {\r\n                        newData.push({\r\n                            bookId: book._id,\r\n                            bookName: book.name,\r\n                            price: book.price,\r\n                            image: <>\r\n                                <img width=\"100\"\r\n                                     src={`${API}/book/image/${book._id}`}/>\r\n                            </>,\r\n                            action: <div>\r\n                                <IconButton onClick={() => onClickEdit(book)}>\r\n                                    <EditIcon fontSize=\"default\" className=\"text-primary\"/>\r\n                                </IconButton>\r\n                                <IconButton onClick={() => onClickDelete(book._id)}>\r\n                                    <DeleteIcon fontSize=\"default\" className=\"text-danger\"/>\r\n                                </IconButton>\r\n                            </div>\r\n                        })\r\n                    });\r\n\r\n                    let table_data = {\r\n                        columns: columns.books_table_columns,\r\n                        rows: newData\r\n                    }\r\n\r\n                    setTableData(table_data);\r\n                }\r\n            })\r\n    };\r\n\r\n    const onClickDelete = (bookId) => {\r\n        swal({\r\n            title: \"Are you sure?\",\r\n            text: \"You won't be able to reverse this transaction!\",\r\n            icon: \"warning\",\r\n            buttons: true,\r\n            dangerMode: true,\r\n        })\r\n            .then((willDelete) => {\r\n                if (willDelete) {\r\n                    setTableLoader(true);\r\n                    deleteBookById(token, bookId)\r\n                        .then(response => {\r\n                            if(!response.error){\r\n                                swal(\"Successful!\", \"Book deleted Successfully!\", \"success\");\r\n                                fetchAllBooks();\r\n                            }\r\n                        })\r\n                } else {\r\n                    swal(\"You cancelled the transaction!\");\r\n                }\r\n            });\r\n    };\r\n\r\n    const onClickEdit = (book) => {\r\n        setProductValues({...productValues, _id: book._id, name: book.name, description: book.description, authorName: book.authorName, rating: book.rating, price: book.price, category: book.category._id, addedBy: user._id})\r\n        handleOpen();\r\n    };\r\n\r\n    const handleOnChange = (name) => (event) => {\r\n        const value = name === 'image' ? event.target.files[0] : event.target.value;\r\n        setProductValues({...productValues, [name]: value});\r\n    };\r\n\r\n    const onCategoryChangeHandler = (value) => {\r\n        const categoryId = value._id;\r\n        setProductValues({...productValues, \"category\": categoryId});\r\n        setSelectedCategory(value);\r\n    };\r\n\r\n    const showError = () => (\r\n        <div className=\"alert alert-danger text-center mt-3\" style={{display: error ? '' : 'none'}}>\r\n            {errorMessage}\r\n        </div>\r\n    );\r\n\r\n    const handleOpen = () => {\r\n        setShow(true);\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setShow(false);\r\n    };\r\n\r\n    const clickOnSubmit = (event) => {\r\n        event.preventDefault();\r\n        setProductValues({...productValues, error: false, loading: true});\r\n\r\n        if(name === \"\" || rating === \"\" || description === \"\" || price === \"\" || category === \"\" || authorName === \"\"){\r\n            setProductValues({...productValues, error: true, loading: false});\r\n            setErrorMessage(\"Please fill all the required Fields!\")\r\n        }else{\r\n\r\n            //creating form data\r\n            let formData = new FormData();\r\n            formData.append('_id', _id);\r\n            formData.append('name', name);\r\n\r\n            //if image is altered only, add to the form data\r\n            if(productValues.image)\r\n                formData.append('image', productValues.image);\r\n\r\n            formData.append('description', description);\r\n            formData.append('authorName', authorName);\r\n            formData.append('category', category);\r\n            formData.append('addedBy', addedBy);\r\n            formData.append('price', price);\r\n            formData.append('rating', rating);\r\n\r\n            updateBook(token, formData, _id)\r\n                .then(response => {\r\n                    if (response.error) {\r\n                        setProductValues({...productValues, error: true, loading: false});\r\n                        if(Array.isArray(response.message)){\r\n                            // console.log(response);\r\n                        }else{\r\n                            setErrorMessage(response.message)\r\n                        }\r\n                    } else {\r\n                        setProductValues({\r\n                            ...productValues,\r\n                            name: '',\r\n                            description: '',\r\n                            image: '',\r\n                            price: '',\r\n                            rating: '',\r\n                            authorName: '',\r\n                            category: '',\r\n                            loading: false,\r\n                            error: false\r\n                        });\r\n                        setSelectedCategory(\"\");\r\n                        fetchAllBooks();\r\n                        swal(\"Successful!\", \"Book Updated Successfully!\", \"success\");\r\n                    }\r\n                });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"col-12\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-12 text-center mb-3 mt-5\" style={{fontSize: '20px', color: '#8C8887'}}>\r\n                    <FontAwesomeIcon size={\"1x\"} icon={faBookOpen}/> {' '} Manage Books\r\n                </div>\r\n            </div>\r\n            <div className=\"row mt-5\">\r\n                <div className=\"col-12 text-center\">\r\n                    {tableLoader && (<CircularProgress size={30} className=\"mt-3\" />)}\r\n                    {!tableLoader && (\r\n                        <MDBDataTable className='shadow p-3 mb-5 bg-white rounded'\r\n                                      bordered\r\n                                      small\r\n                                      hover\r\n                                      data={tableData}\r\n                                      responsive\r\n                        >\r\n                        </MDBDataTable>\r\n                    )}\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                    <Modal zIndex={9999} size=\"lg\" isOpen={show} onHide={handleClose}>\r\n                        <ModalHeader>\r\n                            <div className=\"btn-toolbar mt-3 mb-2 mb-md-0 \" style={{float: 'right'}}>\r\n                                <div className=\"btn-group mr-2\">\r\n                                    <IconButton onClick={handleClose}>\r\n                                        <CancelPresentationIcon fontSize=\"default\" className=\"text-danger\"/>\r\n                                    </IconButton>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </ModalHeader>\r\n\r\n                        <ModalBody>\r\n                            <div className=\"col-12\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-12 text-center mb-3 mt-1\" style={{fontSize: '20px', color: '#8C8887'}}>\r\n                                        <FontAwesomeIcon size={\"1x\"} icon={faEdit}/> {' '} Manage Book\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row mt-3 mb-3\">\r\n                                    <div className=\"col-md-12 col-lg-6 col-sm-12 col-xs-12\">\r\n                                        <Autocomplete\r\n                                            onChange={(event, value) => onCategoryChangeHandler(value)}\r\n                                            freeSolo\r\n                                            value={selectedCategory}\r\n                                            id=\"free-solo-2-demo\"\r\n                                            disableClearable\r\n                                            disablePortal\r\n                                            options={categories.map((option) => option)}\r\n                                            getOptionLabel={options => options.name}\r\n                                            renderInput={(params) => (\r\n                                                <TextField\r\n                                                    {...params}\r\n                                                    id=\"category\"\r\n                                                    placeholder=\"Select Category\"\r\n                                                    label=\"Search Category\"\r\n                                                    margin=\"normal\"\r\n                                                    variant=\"outlined\"\r\n                                                    InputProps={{...params.InputProps, type: 'search'}}\r\n                                                />\r\n                                            )}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"col-md-12 col-lg-6 col-sm-12 col-xs-12 mt-4\">\r\n                                        <input\r\n                                            type=\"file\"\r\n                                            onChange={handleOnChange('image')}\r\n                                            className=\"custom-file-input\"\r\n                                            name=\"image\"\r\n                                            accept=\"image/*\"\r\n                                        />\r\n                                        <label className=\"custom-file-label\" htmlFor=\"inputGroupFile01\">\r\n                                            Browse an image\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-12\">\r\n                                        <hr />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row mt-5\">\r\n                                    <div className=\"col-md-12 col-lg-6 col-sm-12 col-xs-12\">\r\n                                        <label htmlFor=\"inputName\" className=\"sr-only\">Name</label>\r\n                                        <input type=\"text\" id=\"inputName\" className=\"form-control\" placeholder=\"Book's Name\"\r\n                                               value={name}\r\n                                               onChange={handleOnChange('name')}/>\r\n                                    </div>\r\n                                    <div className=\"col-md-12 col-lg-6 col-sm-12 col-xs-12\">\r\n                                        <label htmlFor=\"inputDescription\" className=\"sr-only\">Description</label>\r\n                                        <input type=\"text\" id=\"inputDescription\" className=\"form-control\" placeholder=\"Book's Description\"\r\n                                               value={description}\r\n                                               onChange={handleOnChange('description')}/>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row mt-2\">\r\n                                    <div className=\"col-md-12 col-lg-6 col-sm-12 col-xs-12\">\r\n                                        <label htmlFor=\"inputPrice\" className=\"sr-only\">Price</label>\r\n                                        <input type=\"text\" id=\"inputPrice\" className=\"form-control\" placeholder=\"Book's Price\"\r\n                                               value={price}\r\n                                               onChange={handleOnChange('price')}/>\r\n                                    </div>\r\n                                    <div className=\"col-md-12 col-lg-6 col-sm-12 col-xs-12\">\r\n                                        <label htmlFor=\"inputAuthorName\" className=\"sr-only\">Author's Name</label>\r\n                                        <input type=\"text\" id=\"inputAuthorName\" className=\"form-control\" placeholder=\"Book's Author\"\r\n                                               value={authorName}\r\n                                               onChange={handleOnChange('authorName')}/>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row mt-2\">\r\n                                    <div className=\"col-md-12 col-lg-6 col-sm-12 col-xs-12\">\r\n                                        <label htmlFor=\"inputRating\" className=\"sr-only\">Book's Rating</label>\r\n                                        <input type=\"text\" id=\"inputPrice\" className=\"form-control\" placeholder=\"Book's Rate\"\r\n                                               value={rating}\r\n                                               onChange={handleOnChange('rating')}/>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"row mb-5\">\r\n                                    <div className=\"col-12\">\r\n                                        <button className=\"btn btn-lg btn-primary btn-block mt-5\" onClick={clickOnSubmit} disabled={loading}>\r\n                                            { loading ? <CircularProgress size={20}/> : 'Update Book' }\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                                {showError()}\r\n                            </div>\r\n                        </ModalBody>\r\n                    </Modal>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ManageBooks;\r\n","D:\\SLIIT\\3rd Year\\1st Semester\\Application Framework\\Study Help\\books_store_frontend\\src\\Service\\admin\\admin_service.js",[],"D:\\SLIIT\\3rd Year\\1st Semester\\Application Framework\\Study Help\\books_store_frontend\\src\\Components\\admin\\ManageCategories.js",["123","124","125","126","127","128"],"import React, {useEffect, useState} from \"react\";\r\nimport {MDBDataTable} from \"mdbreact\";\r\nimport {getAllCategories, deleteCategoryById, addCategory, updateCategory} from \"../../Service/admin/admin_service\";\r\nimport {isAuthenticate} from \"../../Authentication\";\r\nimport {columns} from \"../../config\";\r\nimport swal from \"sweetalert\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faList} from \"@fortawesome/free-solid-svg-icons/faList\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport {faPlane} from \"@fortawesome/free-solid-svg-icons/faPlane\";\r\nimport {faRedoAlt} from \"@fortawesome/free-solid-svg-icons/faRedoAlt\";\r\n\r\nconst ManageCategories = (props) => {\r\n\r\n    const {token} = isAuthenticate();\r\n\r\n    //table data generated\r\n    const [tableData, setTableData] = useState([]);\r\n\r\n    const [category, setCategory] = useState({\r\n        name: '',\r\n        _id: '',\r\n        error: false,\r\n        loading: false\r\n    });\r\n\r\n    const {\r\n        name,\r\n        _id,\r\n        error,\r\n        loading\r\n    } = category;\r\n\r\n    const [errorMessage, setErrorMessage] = useState(false);\r\n\r\n    useEffect(() => {\r\n        fetchAllCategories();\r\n    }, []);\r\n\r\n\r\n    const fetchAllCategories = () => {\r\n        setCategory({...category, name: '', _id: '', error: false, loading: true});\r\n        getAllCategories(token)\r\n            .then(response => {\r\n                if(!response.error){\r\n                    setCategory({...category, name: '', _id: '', error: false, loading: false});\r\n                    let newData = [];\r\n                    response.message.forEach(category => {\r\n                        newData.push({\r\n                            categoryId : category._id,\r\n                            categoryName : category.name,\r\n                            action :<div>\r\n                                <IconButton onClick={() => onClickEdit(category._id, category.name)}>\r\n                                    <EditIcon fontSize=\"default\" className = \"text-primary\"/>\r\n                                </IconButton>\r\n                                <IconButton onClick={() => onClickDelete(category._id)}>\r\n                                    <DeleteIcon fontSize=\"default\"  className = \"text-danger\"/>\r\n                                </IconButton>\r\n                            </div>\r\n                        })\r\n\r\n                        let table_data = {\r\n                            columns : columns.category_table_columns,\r\n                            rows : newData\r\n                        }\r\n\r\n                        setTableData(table_data);\r\n                    });\r\n                }\r\n            })\r\n            .catch(err => console.error(err));\r\n    }\r\n\r\n    const onClickEdit = (catId, catName) => {\r\n        setCategory({...category, name: catName, _id: catId})\r\n    };\r\n\r\n    const onClickDelete = (catId) => {\r\n        swal({\r\n            title: \"Are you sure?\",\r\n            text: \"You won't be able to reverse this transaction!\",\r\n            icon: \"warning\",\r\n            buttons: true,\r\n            dangerMode: true,\r\n        })\r\n            .then((willDelete) => {\r\n                if (willDelete) {\r\n                    setCategory({...category, name: '', _id: '', error: false, loading: true});\r\n                    deleteCategoryById(token, catId)\r\n                        .then(response => {\r\n                            if(!response.error){\r\n                                setCategory({...category, name: '', _id: '', error: false, loading: false});\r\n                                swal(\"Successful!\", \"Category deleted Successfully!\", \"success\");\r\n                                fetchAllCategories();\r\n                            }\r\n                        })\r\n                } else {\r\n                    swal(\"You cancelled the transaction!\");\r\n                }\r\n            });\r\n    }\r\n\r\n    const handleOnChange = (name) => (event) => {\r\n        const value = event.target.value;\r\n        setCategory({...category, [name]: value});\r\n    };\r\n\r\n    const onSubmit = (event) => {\r\n        event.preventDefault();\r\n        setCategory({...category, error: false, loading: true});\r\n        if(name == ''){\r\n            setCategory({...category, error: true, loading: false});\r\n            setErrorMessage(\"Please fill Category name!\");\r\n        }else {\r\n            if(_id === ''){\r\n                addCategory(token, {name: name})\r\n                    .then(response => {\r\n                        if(!response.error){\r\n                            setCategory({...category, name: '', _id: '', error: false, loading: false});\r\n                            swal(\"Successful!\", \"Category Successfully Created!\", \"success\");\r\n                            fetchAllCategories();\r\n                        }\r\n                    })\r\n                    .catch(err => console.error(err));\r\n            }else{\r\n                updateCategory(token, {_id: _id, name: name}, _id)\r\n                    .then(response => {\r\n                        if(!response.error){\r\n                            setCategory({...category, name: '', _id: '', error: false, loading: false});\r\n                            swal(\"Successful!\", \"Category Successfully Updated!\", \"success\");\r\n                            fetchAllCategories();\r\n                        }\r\n                    })\r\n                    .catch(err => console.error(err));\r\n            }\r\n        }\r\n    };\r\n\r\n    const showError = () => (\r\n        <div className=\"alert alert-danger text-center mt-3\" style={{display: error ? '' : 'none'}}>\r\n            {errorMessage}\r\n        </div>\r\n    );\r\n\r\n    const clearAll = (event) => {\r\n        event.preventDefault();\r\n        setCategory({...category, name: '', _id: ''});\r\n    }\r\n\r\n    return (\r\n        <div className=\"col-12\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-12 text-center mb-3 mt-5\" style={{fontSize: '20px', color: '#8C8887'}}>\r\n                    <FontAwesomeIcon size={\"1x\"} icon={faList}/> {' '} Manage Categories\r\n                </div>\r\n            </div>\r\n            <div className=\"row mt-3\">\r\n                <div className=\"col-12\">\r\n                    <label htmlFor=\"inputName\" className=\"sr-only\">Category Name</label>\r\n                    <input type=\"text\" id=\"inputName\" className=\"form-control\" placeholder=\"Category Name\"\r\n                           value={name}\r\n                           onChange={handleOnChange('name')}/>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row mt-5 mb-5\">\r\n                <div className=\"col-auto\">\r\n                    <button className=\"btn btn-success\" onClick={onSubmit} disabled={loading}>\r\n                        <FontAwesomeIcon size={\"1x\"} icon={faPlane}/> {' '}{_id === '' ? 'Save': 'Update'}\r\n                    </button>\r\n                </div>\r\n                <div className=\"col-auto\">\r\n                    <button className=\"btn btn-warning\" style={{color: '#ffffff'}} onClick={clearAll}><FontAwesomeIcon size={\"1x\"}\r\n                                                                                                                       icon={faRedoAlt}/> {' '}Clear\r\n                    </button>\r\n                </div>\r\n            </div>\r\n            {showError()}\r\n            <div className=\"row mt-5\">\r\n                <div className=\"col-12 text-center\">\r\n                    {loading && (<CircularProgress size={30} className=\"mt-3\" />)}\r\n                    {!loading && (\r\n                        <MDBDataTable className='shadow p-3 mb-5 bg-white rounded'\r\n                                      bordered\r\n                                      small\r\n                                      hover\r\n                                      data={tableData}\r\n                                      responsive\r\n                        >\r\n                        </MDBDataTable>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ManageCategories;\r\n","D:\\SLIIT\\3rd Year\\1st Semester\\Application Framework\\Study Help\\books_store_frontend\\src\\Components\\admin\\AddAdmin.js",["129","130","131","132"],"import React, {useEffect, useState} from \"react\";\r\nimport {isAuthenticate} from \"../../Authentication\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport * as Constants from \"../../config\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport {addAdminUser} from \"../../Service/admin/admin_service\";\r\nimport swal from \"sweetalert\";\r\n\r\nconst AddAdmin = (props) => {\r\n\r\n    const {token} = isAuthenticate();\r\n\r\n    const [errorMessage, setErrorMessage] = useState(\"\");\r\n\r\n    const [loginDetails, setLoginDetails] = useState({\r\n        name: \"\",\r\n        role: 1,\r\n        email: \"\",\r\n        password: \"\",\r\n        confPassword: \"\",\r\n        error: false,\r\n        loading: false,\r\n        redirect: false\r\n    });\r\n\r\n    const {\r\n        name,\r\n        role,\r\n        email,\r\n        password,\r\n        confPassword,\r\n        error,\r\n        loading,\r\n        redirect\r\n    } = loginDetails;\r\n\r\n    const handleOnChange = (name) => (event) => {\r\n        const value = event.target.value;\r\n        setLoginDetails({...loginDetails, [name]: value});\r\n    };\r\n\r\n    const onClickSubmit = (event) => {\r\n        event.preventDefault();\r\n        setLoginDetails({...loginDetails, error: false, loading: true});\r\n        setErrorMessage(\"\");\r\n        //check values empty?\r\n        if(email === \"\" || password === \"\" || name === \"\" || confPassword === \"\"){\r\n            setLoginDetails({...loginDetails, error: true, loading: false});\r\n            setErrorMessage(\"Fields cannot be empty!\");\r\n        }else{\r\n            // check password and confPassword match?\r\n            if(password !== confPassword){\r\n                setLoginDetails({...loginDetails, error: true, loading: false});\r\n                setErrorMessage(\"Passwords should match!\");\r\n            }else{\r\n                addAdminUser(token, {name: name, role: role, email: email, password: password})\r\n                    .then(response => {\r\n                        if(response.error){\r\n                            //show error message\r\n                            setLoginDetails({...loginDetails, error: true, loading: false});\r\n                            if(Array.isArray(response.message)){\r\n                                if(response.message[0].param === \"email\")\r\n                                    setErrorMessage(response.message[0].msg);\r\n                            }else{\r\n                                setErrorMessage(response.message)\r\n                            }\r\n                        }else{\r\n                            setLoginDetails({...loginDetails, name: '', role: 1, email: '', password: '', confPassword: '', error: false, loading: false});\r\n                            swal(\"Successful!\", \"User added Successfully!\", \"success\");\r\n                        }\r\n                    })\r\n            }\r\n        }\r\n    }\r\n\r\n    const showError = () => (\r\n        <div className=\"alert alert-danger text-center mt-3\" style={{display: error ? '' : 'none'}}>\r\n            {errorMessage}\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div className=\"text-center container mt-5\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-4 col-sm-12 col-lg-4\">\r\n\r\n                </div>\r\n                <div className=\"col-md-4 col-sm-12 col-lg-4\">\r\n                    <div className=\"form-signin\">\r\n                        <img className=\"mb-4\" src=\"https://getbootstrap.com/docs/4.0/assets/brand/bootstrap-solid.svg\"\r\n                             alt=\"\" width=\"72\" height=\"72\" />\r\n\r\n                        <h1 className=\"h3 mb-3 font-weight-normal\">Add Admin</h1>\r\n\r\n                        <label htmlFor=\"inputName\" className=\"sr-only mt-5\">Name</label>\r\n                        <input type=\"text\" id=\"inputName\" className=\"form-control mt-5\" placeholder=\"Enter Name\"\r\n                               value={name}\r\n                               onChange={handleOnChange('name')}/>\r\n\r\n                        <label htmlFor=\"inputEmail\" className=\"sr-only mt-2\">Email address</label>\r\n                        <input type=\"email\" id=\"inputEmail\" className=\"form-control mt-2\" placeholder=\"Enter Email address\"\r\n                               value={email}\r\n                               onChange={handleOnChange('email')}/>\r\n\r\n                        <label htmlFor=\"inputPassword\" className=\"sr-only mt-2\">Password</label>\r\n                        <input type=\"password\" id=\"inputPassword\" className=\"form-control mt-2\" placeholder=\"Enter Password\"\r\n                               value={password}\r\n                               onChange={handleOnChange('password')}/>\r\n\r\n                        <label htmlFor=\"inputConfPassword\" className=\"sr-only mt-2\">Confirm Password</label>\r\n                        <input type=\"password\" id=\"inputConfPassword\" className=\"form-control mt-2\" placeholder=\"Enter Confirm Password\"\r\n                               value={confPassword}\r\n                               onChange={handleOnChange('confPassword')}/>\r\n\r\n                        <button className=\"btn btn-lg btn-primary btn-block mt-5\" onClick={onClickSubmit} disabled={loading}>\r\n                            { loading ? <CircularProgress size={20}/> : 'Create a User' }\r\n                        </button>\r\n                        {showError()}\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-md-4 col-sm-12 col-lg-4\">\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AddAdmin;\r\n","D:\\SLIIT\\3rd Year\\1st Semester\\Application Framework\\Study Help\\books_store_frontend\\src\\Components\\common\\Page404.js",[],{"ruleId":"133","replacedBy":"134"},{"ruleId":"135","replacedBy":"136"},{"ruleId":"137","severity":1,"message":"138","line":1,"column":16,"nodeType":"139","messageId":"140","endLine":1,"endColumn":25},{"ruleId":"137","severity":1,"message":"141","line":1,"column":27,"nodeType":"139","messageId":"140","endLine":1,"endColumn":35},{"ruleId":"137","severity":1,"message":"138","line":1,"column":16,"nodeType":"139","messageId":"140","endLine":1,"endColumn":25},{"ruleId":"137","severity":1,"message":"141","line":1,"column":27,"nodeType":"139","messageId":"140","endLine":1,"endColumn":35},{"ruleId":"137","severity":1,"message":"138","line":1,"column":16,"nodeType":"139","messageId":"140","endLine":1,"endColumn":25},{"ruleId":"137","severity":1,"message":"141","line":1,"column":27,"nodeType":"139","messageId":"140","endLine":1,"endColumn":35},{"ruleId":"137","severity":1,"message":"142","line":10,"column":9,"nodeType":"139","messageId":"140","endLine":10,"endColumn":24},{"ruleId":"137","severity":1,"message":"143","line":11,"column":9,"nodeType":"139","messageId":"140","endLine":11,"endColumn":21},{"ruleId":"137","severity":1,"message":"138","line":1,"column":16,"nodeType":"139","messageId":"140","endLine":1,"endColumn":25},{"ruleId":"137","severity":1,"message":"138","line":1,"column":16,"nodeType":"139","messageId":"140","endLine":1,"endColumn":25},{"ruleId":"137","severity":1,"message":"138","line":1,"column":16,"nodeType":"139","messageId":"140","endLine":1,"endColumn":25},{"ruleId":"137","severity":1,"message":"141","line":1,"column":27,"nodeType":"139","messageId":"140","endLine":1,"endColumn":35},{"ruleId":"137","severity":1,"message":"144","line":1,"column":16,"nodeType":"139","messageId":"140","endLine":1,"endColumn":25},{"ruleId":"145","severity":1,"message":"146","line":51,"column":8,"nodeType":"147","endLine":51,"endColumn":10,"suggestions":"148"},{"ruleId":"145","severity":1,"message":"149","line":77,"column":8,"nodeType":"147","endLine":77,"endColumn":10,"suggestions":"150"},{"ruleId":"151","severity":1,"message":"152","line":93,"column":33,"nodeType":"153","endLine":94,"endColumn":77},{"ruleId":"137","severity":1,"message":"154","line":3,"column":9,"nodeType":"139","messageId":"140","endLine":3,"endColumn":14},{"ruleId":"137","severity":1,"message":"155","line":3,"column":16,"nodeType":"139","messageId":"140","endLine":3,"endColumn":25},{"ruleId":"137","severity":1,"message":"156","line":3,"column":27,"nodeType":"139","messageId":"140","endLine":3,"endColumn":38},{"ruleId":"137","severity":1,"message":"143","line":12,"column":9,"nodeType":"139","messageId":"140","endLine":12,"endColumn":21},{"ruleId":"145","severity":1,"message":"157","line":43,"column":8,"nodeType":"147","endLine":43,"endColumn":10,"suggestions":"158"},{"ruleId":"159","severity":1,"message":"160","line":116,"column":17,"nodeType":"161","messageId":"162","endLine":116,"endColumn":19},{"ruleId":"137","severity":1,"message":"138","line":1,"column":16,"nodeType":"139","messageId":"140","endLine":1,"endColumn":25},{"ruleId":"137","severity":1,"message":"163","line":3,"column":9,"nodeType":"139","messageId":"140","endLine":3,"endColumn":17},{"ruleId":"137","severity":1,"message":"164","line":4,"column":13,"nodeType":"139","messageId":"140","endLine":4,"endColumn":22},{"ruleId":"137","severity":1,"message":"165","line":34,"column":9,"nodeType":"139","messageId":"140","endLine":34,"endColumn":17},"no-native-reassign",["166"],"no-negated-in-lhs",["167"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'FontAwesomeIcon' is defined but never used.","'faBookReader' is defined but never used.","'Component' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'token'. Either include it or remove the dependency array.","ArrayExpression",["168"],"React Hook useEffect has missing dependencies: 'fetchAllBooks' and 'token'. Either include them or remove the dependency array.",["169"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Modal' is defined but never used.","'ModalBody' is defined but never used.","'ModalHeader' is defined but never used.","React Hook useEffect has a missing dependency: 'fetchAllCategories'. Either include it or remove the dependency array.",["170"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Redirect' is defined but never used.","'Constants' is defined but never used.","'redirect' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"171","fix":"172"},{"desc":"173","fix":"174"},{"desc":"175","fix":"176"},"Update the dependencies array to be: [token]",{"range":"177","text":"178"},"Update the dependencies array to be: [fetchAllBooks, token]",{"range":"179","text":"180"},"Update the dependencies array to be: [fetchAllCategories]",{"range":"181","text":"182"},[1568,1570],"[token]",[2363,2365],"[fetchAllBooks, token]",[1499,1501],"[fetchAllCategories]"]